name: Release Debian/Bullseye (buildx/arm64)

on:
  workflow_dispatch:

jobs:
  build:
    permissions:
      contents: write
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Build packages
      run: |
        if [ "${RUNNER_DEBUG}" = "1" ]; then
          docker buildx build -o packages --build-arg buildoptions="github debug" --platform linux/arm64 .
        else
          docker buildx build -o packages --build-arg buildoptions="github" --platform linux/arm64 .
        fi
    - name: Test packages
      run: |
        sudo apt install -y \
                ./packages/libjs-extjs_*_all.deb \
                ./packages/libjs-qrcodejs_*_all.deb \
                ./packages/libproxmox-acme-plugins_*_all.deb \
                ./packages/pbs-i18n_*_all.deb \
                ./packages/proxmox-backup-docs_*_all.deb \
                ./packages/proxmox-backup-server_*.deb \
                ./packages/proxmox-mini-journalreader_*.deb \
                ./packages/proxmox-widget-toolkit_*_all.deb \
                ./packages/pve-xtermjs_*.deb
        sudo apt install -y \
                ./packages/proxmox-backup-client_*.deb
        sudo apt install -y \
                ./packages/proxmox-backup-file-restore_*.deb
        echo "DEB_VERSION=$(dpkg -s proxmox-backup-server | sed -n '/Version/ s/[^ ]\+ //p')" >> $GITHUB_ENV
        echo "DEB_VERSION_UPSTREAM=$(dpkg -s proxmox-backup-server | sed -n '/Version/ s/[^ ]\+ \([0-9.]\+\)-[0-9]/\1/p')" >> $GITHUB_ENV
    - name: Release packages
      uses: ncipollo/release-action@v1
      with:
        artifacts: "packages/*.deb"
        bodyFile: "PREBUILD.md"
        tag:  ${{ env.DEB_VERSION_UPSTREAM }}
        name: Version ${{ env.DEB_VERSION }}
